// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.22.0
// 	protoc        v3.11.4
// source: testdata/initdb/initdb.proto

package initdb

import (
	context "context"
	proto "github.com/golang/protobuf/proto"
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type Meta struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Db string `protobuf:"bytes,1,opt,name=db,proto3" json:"db,omitempty"`
}

func (x *Meta) Reset() {
	*x = Meta{}
	if protoimpl.UnsafeEnabled {
		mi := &file_testdata_initdb_initdb_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Meta) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Meta) ProtoMessage() {}

func (x *Meta) ProtoReflect() protoreflect.Message {
	mi := &file_testdata_initdb_initdb_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Meta.ProtoReflect.Descriptor instead.
func (*Meta) Descriptor() ([]byte, []int) {
	return file_testdata_initdb_initdb_proto_rawDescGZIP(), []int{0}
}

func (x *Meta) GetDb() string {
	if x != nil {
		return x.Db
	}
	return ""
}

type InsertAuthorRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Meta             *Meta  `protobuf:"bytes,1,opt,name=meta,proto3" json:"meta,omitempty"`
	Id               uint32 `protobuf:"varint,2,opt,name=id,proto3" json:"id,omitempty"`
	Username         string `protobuf:"bytes,3,opt,name=username,proto3" json:"username,omitempty"`
	Password         string `protobuf:"bytes,4,opt,name=password,proto3" json:"password,omitempty"`
	Email            string `protobuf:"bytes,5,opt,name=email,proto3" json:"email,omitempty"`
	Bio              string `protobuf:"bytes,6,opt,name=bio,proto3" json:"bio,omitempty"`
	FavouriteSection string `protobuf:"bytes,7,opt,name=favourite_section,json=favouriteSection,proto3" json:"favourite_section,omitempty"`
}

func (x *InsertAuthorRequest) Reset() {
	*x = InsertAuthorRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_testdata_initdb_initdb_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InsertAuthorRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InsertAuthorRequest) ProtoMessage() {}

func (x *InsertAuthorRequest) ProtoReflect() protoreflect.Message {
	mi := &file_testdata_initdb_initdb_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InsertAuthorRequest.ProtoReflect.Descriptor instead.
func (*InsertAuthorRequest) Descriptor() ([]byte, []int) {
	return file_testdata_initdb_initdb_proto_rawDescGZIP(), []int{1}
}

func (x *InsertAuthorRequest) GetMeta() *Meta {
	if x != nil {
		return x.Meta
	}
	return nil
}

func (x *InsertAuthorRequest) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *InsertAuthorRequest) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *InsertAuthorRequest) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

func (x *InsertAuthorRequest) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *InsertAuthorRequest) GetBio() string {
	if x != nil {
		return x.Bio
	}
	return ""
}

func (x *InsertAuthorRequest) GetFavouriteSection() string {
	if x != nil {
		return x.FavouriteSection
	}
	return ""
}

type InsertBlogRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Meta     *Meta  `protobuf:"bytes,1,opt,name=meta,proto3" json:"meta,omitempty"`
	Id       uint32 `protobuf:"varint,2,opt,name=id,proto3" json:"id,omitempty"`
	Title    string `protobuf:"bytes,3,opt,name=title,proto3" json:"title,omitempty"`
	AuthorId uint32 `protobuf:"varint,4,opt,name=author_id,json=authorId,proto3" json:"author_id,omitempty"`
}

func (x *InsertBlogRequest) Reset() {
	*x = InsertBlogRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_testdata_initdb_initdb_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InsertBlogRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InsertBlogRequest) ProtoMessage() {}

func (x *InsertBlogRequest) ProtoReflect() protoreflect.Message {
	mi := &file_testdata_initdb_initdb_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InsertBlogRequest.ProtoReflect.Descriptor instead.
func (*InsertBlogRequest) Descriptor() ([]byte, []int) {
	return file_testdata_initdb_initdb_proto_rawDescGZIP(), []int{2}
}

func (x *InsertBlogRequest) GetMeta() *Meta {
	if x != nil {
		return x.Meta
	}
	return nil
}

func (x *InsertBlogRequest) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *InsertBlogRequest) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *InsertBlogRequest) GetAuthorId() uint32 {
	if x != nil {
		return x.AuthorId
	}
	return 0
}

type InsertCommentRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Meta    *Meta  `protobuf:"bytes,1,opt,name=meta,proto3" json:"meta,omitempty"`
	Id      uint32 `protobuf:"varint,2,opt,name=id,proto3" json:"id,omitempty"`
	PostId  uint32 `protobuf:"varint,3,opt,name=post_id,json=postId,proto3" json:"post_id,omitempty"`
	Name    string `protobuf:"bytes,4,opt,name=name,proto3" json:"name,omitempty"`
	Comment string `protobuf:"bytes,5,opt,name=comment,proto3" json:"comment,omitempty"`
}

func (x *InsertCommentRequest) Reset() {
	*x = InsertCommentRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_testdata_initdb_initdb_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InsertCommentRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InsertCommentRequest) ProtoMessage() {}

func (x *InsertCommentRequest) ProtoReflect() protoreflect.Message {
	mi := &file_testdata_initdb_initdb_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InsertCommentRequest.ProtoReflect.Descriptor instead.
func (*InsertCommentRequest) Descriptor() ([]byte, []int) {
	return file_testdata_initdb_initdb_proto_rawDescGZIP(), []int{3}
}

func (x *InsertCommentRequest) GetMeta() *Meta {
	if x != nil {
		return x.Meta
	}
	return nil
}

func (x *InsertCommentRequest) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *InsertCommentRequest) GetPostId() uint32 {
	if x != nil {
		return x.PostId
	}
	return 0
}

func (x *InsertCommentRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *InsertCommentRequest) GetComment() string {
	if x != nil {
		return x.Comment
	}
	return ""
}

type InsertPostRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Meta      *Meta                `protobuf:"bytes,1,opt,name=meta,proto3" json:"meta,omitempty"`
	Id        uint32               `protobuf:"varint,2,opt,name=id,proto3" json:"id,omitempty"`
	AuthorId  uint32               `protobuf:"varint,3,opt,name=author_id,json=authorId,proto3" json:"author_id,omitempty"`
	BlogId    uint32               `protobuf:"varint,4,opt,name=blog_id,json=blogId,proto3" json:"blog_id,omitempty"`
	CreatedOn *timestamp.Timestamp `protobuf:"bytes,5,opt,name=created_on,json=createdOn,proto3" json:"created_on,omitempty"`
	Section   string               `protobuf:"bytes,6,opt,name=section,proto3" json:"section,omitempty"`
	Subject   string               `protobuf:"bytes,7,opt,name=subject,proto3" json:"subject,omitempty"`
	Draft     string               `protobuf:"bytes,8,opt,name=draft,proto3" json:"draft,omitempty"`
	Body      string               `protobuf:"bytes,9,opt,name=body,proto3" json:"body,omitempty"`
}

func (x *InsertPostRequest) Reset() {
	*x = InsertPostRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_testdata_initdb_initdb_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InsertPostRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InsertPostRequest) ProtoMessage() {}

func (x *InsertPostRequest) ProtoReflect() protoreflect.Message {
	mi := &file_testdata_initdb_initdb_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InsertPostRequest.ProtoReflect.Descriptor instead.
func (*InsertPostRequest) Descriptor() ([]byte, []int) {
	return file_testdata_initdb_initdb_proto_rawDescGZIP(), []int{4}
}

func (x *InsertPostRequest) GetMeta() *Meta {
	if x != nil {
		return x.Meta
	}
	return nil
}

func (x *InsertPostRequest) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *InsertPostRequest) GetAuthorId() uint32 {
	if x != nil {
		return x.AuthorId
	}
	return 0
}

func (x *InsertPostRequest) GetBlogId() uint32 {
	if x != nil {
		return x.BlogId
	}
	return 0
}

func (x *InsertPostRequest) GetCreatedOn() *timestamp.Timestamp {
	if x != nil {
		return x.CreatedOn
	}
	return nil
}

func (x *InsertPostRequest) GetSection() string {
	if x != nil {
		return x.Section
	}
	return ""
}

func (x *InsertPostRequest) GetSubject() string {
	if x != nil {
		return x.Subject
	}
	return ""
}

func (x *InsertPostRequest) GetDraft() string {
	if x != nil {
		return x.Draft
	}
	return ""
}

func (x *InsertPostRequest) GetBody() string {
	if x != nil {
		return x.Body
	}
	return ""
}

type InsertPostTagRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Meta   *Meta  `protobuf:"bytes,1,opt,name=meta,proto3" json:"meta,omitempty"`
	PostId uint32 `protobuf:"varint,2,opt,name=post_id,json=postId,proto3" json:"post_id,omitempty"`
	TagId  uint32 `protobuf:"varint,3,opt,name=tag_id,json=tagId,proto3" json:"tag_id,omitempty"`
}

func (x *InsertPostTagRequest) Reset() {
	*x = InsertPostTagRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_testdata_initdb_initdb_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InsertPostTagRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InsertPostTagRequest) ProtoMessage() {}

func (x *InsertPostTagRequest) ProtoReflect() protoreflect.Message {
	mi := &file_testdata_initdb_initdb_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InsertPostTagRequest.ProtoReflect.Descriptor instead.
func (*InsertPostTagRequest) Descriptor() ([]byte, []int) {
	return file_testdata_initdb_initdb_proto_rawDescGZIP(), []int{5}
}

func (x *InsertPostTagRequest) GetMeta() *Meta {
	if x != nil {
		return x.Meta
	}
	return nil
}

func (x *InsertPostTagRequest) GetPostId() uint32 {
	if x != nil {
		return x.PostId
	}
	return 0
}

func (x *InsertPostTagRequest) GetTagId() uint32 {
	if x != nil {
		return x.TagId
	}
	return 0
}

type InsertTagRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Meta *Meta  `protobuf:"bytes,1,opt,name=meta,proto3" json:"meta,omitempty"`
	Id   uint32 `protobuf:"varint,2,opt,name=id,proto3" json:"id,omitempty"`
	Name string `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *InsertTagRequest) Reset() {
	*x = InsertTagRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_testdata_initdb_initdb_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InsertTagRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InsertTagRequest) ProtoMessage() {}

func (x *InsertTagRequest) ProtoReflect() protoreflect.Message {
	mi := &file_testdata_initdb_initdb_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InsertTagRequest.ProtoReflect.Descriptor instead.
func (*InsertTagRequest) Descriptor() ([]byte, []int) {
	return file_testdata_initdb_initdb_proto_rawDescGZIP(), []int{6}
}

func (x *InsertTagRequest) GetMeta() *Meta {
	if x != nil {
		return x.Meta
	}
	return nil
}

func (x *InsertTagRequest) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *InsertTagRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type EmptyResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *EmptyResponse) Reset() {
	*x = EmptyResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_testdata_initdb_initdb_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EmptyResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EmptyResponse) ProtoMessage() {}

func (x *EmptyResponse) ProtoReflect() protoreflect.Message {
	mi := &file_testdata_initdb_initdb_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EmptyResponse.ProtoReflect.Descriptor instead.
func (*EmptyResponse) Descriptor() ([]byte, []int) {
	return file_testdata_initdb_initdb_proto_rawDescGZIP(), []int{7}
}

type InitRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Meta *Meta `protobuf:"bytes,1,opt,name=meta,proto3" json:"meta,omitempty"`
}

func (x *InitRequest) Reset() {
	*x = InitRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_testdata_initdb_initdb_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InitRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InitRequest) ProtoMessage() {}

func (x *InitRequest) ProtoReflect() protoreflect.Message {
	mi := &file_testdata_initdb_initdb_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InitRequest.ProtoReflect.Descriptor instead.
func (*InitRequest) Descriptor() ([]byte, []int) {
	return file_testdata_initdb_initdb_proto_rawDescGZIP(), []int{8}
}

func (x *InitRequest) GetMeta() *Meta {
	if x != nil {
		return x.Meta
	}
	return nil
}

var File_testdata_initdb_initdb_proto protoreflect.FileDescriptor

var file_testdata_initdb_initdb_proto_rawDesc = []byte{
	0x0a, 0x1c, 0x74, 0x65, 0x73, 0x74, 0x64, 0x61, 0x74, 0x61, 0x2f, 0x69, 0x6e, 0x69, 0x74, 0x64,
	0x62, 0x2f, 0x69, 0x6e, 0x69, 0x74, 0x64, 0x62, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x06,
	0x69, 0x6e, 0x69, 0x74, 0x64, 0x62, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x16, 0x0a, 0x04, 0x4d, 0x65, 0x74, 0x61, 0x12,
	0x0e, 0x0a, 0x02, 0x64, 0x62, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x64, 0x62, 0x22,
	0xd4, 0x01, 0x0a, 0x13, 0x49, 0x6e, 0x73, 0x65, 0x72, 0x74, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x20, 0x0a, 0x04, 0x6d, 0x65, 0x74, 0x61, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x69, 0x6e, 0x69, 0x74, 0x64, 0x62, 0x2e, 0x4d,
	0x65, 0x74, 0x61, 0x52, 0x04, 0x6d, 0x65, 0x74, 0x61, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65,
	0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65,
	0x72, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72,
	0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72,
	0x64, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x10, 0x0a, 0x03, 0x62, 0x69, 0x6f, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x62, 0x69, 0x6f, 0x12, 0x2b, 0x0a, 0x11, 0x66, 0x61, 0x76,
	0x6f, 0x75, 0x72, 0x69, 0x74, 0x65, 0x5f, 0x73, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x66, 0x61, 0x76, 0x6f, 0x75, 0x72, 0x69, 0x74, 0x65, 0x53,
	0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x78, 0x0a, 0x11, 0x49, 0x6e, 0x73, 0x65, 0x72, 0x74,
	0x42, 0x6c, 0x6f, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x20, 0x0a, 0x04, 0x6d,
	0x65, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x69, 0x6e, 0x69, 0x74,
	0x64, 0x62, 0x2e, 0x4d, 0x65, 0x74, 0x61, 0x52, 0x04, 0x6d, 0x65, 0x74, 0x61, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02, 0x69, 0x64, 0x12, 0x14, 0x0a,
	0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69,
	0x74, 0x6c, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x5f, 0x69, 0x64,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x49, 0x64,
	0x22, 0x8f, 0x01, 0x0a, 0x14, 0x49, 0x6e, 0x73, 0x65, 0x72, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x65,
	0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x20, 0x0a, 0x04, 0x6d, 0x65, 0x74,
	0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x69, 0x6e, 0x69, 0x74, 0x64, 0x62,
	0x2e, 0x4d, 0x65, 0x74, 0x61, 0x52, 0x04, 0x6d, 0x65, 0x74, 0x61, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02, 0x69, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x70,
	0x6f, 0x73, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x70, 0x6f,
	0x73, 0x74, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6d, 0x6d,
	0x65, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x65,
	0x6e, 0x74, 0x22, 0x94, 0x02, 0x0a, 0x11, 0x49, 0x6e, 0x73, 0x65, 0x72, 0x74, 0x50, 0x6f, 0x73,
	0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x20, 0x0a, 0x04, 0x6d, 0x65, 0x74, 0x61,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x69, 0x6e, 0x69, 0x74, 0x64, 0x62, 0x2e,
	0x4d, 0x65, 0x74, 0x61, 0x52, 0x04, 0x6d, 0x65, 0x74, 0x61, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x61, 0x75,
	0x74, 0x68, 0x6f, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x61,
	0x75, 0x74, 0x68, 0x6f, 0x72, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x62, 0x6c, 0x6f, 0x67, 0x5f,
	0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x62, 0x6c, 0x6f, 0x67, 0x49, 0x64,
	0x12, 0x39, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x6f, 0x6e, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x4f, 0x6e, 0x12, 0x18, 0x0a, 0x07, 0x73,
	0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x65,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x12,
	0x14, 0x0a, 0x05, 0x64, 0x72, 0x61, 0x66, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x64, 0x72, 0x61, 0x66, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x62, 0x6f, 0x64, 0x79, 0x18, 0x09, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x62, 0x6f, 0x64, 0x79, 0x22, 0x68, 0x0a, 0x14, 0x49, 0x6e, 0x73,
	0x65, 0x72, 0x74, 0x50, 0x6f, 0x73, 0x74, 0x54, 0x61, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x20, 0x0a, 0x04, 0x6d, 0x65, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x0c, 0x2e, 0x69, 0x6e, 0x69, 0x74, 0x64, 0x62, 0x2e, 0x4d, 0x65, 0x74, 0x61, 0x52, 0x04, 0x6d,
	0x65, 0x74, 0x61, 0x12, 0x17, 0x0a, 0x07, 0x70, 0x6f, 0x73, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x70, 0x6f, 0x73, 0x74, 0x49, 0x64, 0x12, 0x15, 0x0a, 0x06,
	0x74, 0x61, 0x67, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x74, 0x61,
	0x67, 0x49, 0x64, 0x22, 0x58, 0x0a, 0x10, 0x49, 0x6e, 0x73, 0x65, 0x72, 0x74, 0x54, 0x61, 0x67,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x20, 0x0a, 0x04, 0x6d, 0x65, 0x74, 0x61, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x69, 0x6e, 0x69, 0x74, 0x64, 0x62, 0x2e, 0x4d,
	0x65, 0x74, 0x61, 0x52, 0x04, 0x6d, 0x65, 0x74, 0x61, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x0f, 0x0a,
	0x0d, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x2f,
	0x0a, 0x0b, 0x49, 0x6e, 0x69, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x20, 0x0a,
	0x04, 0x6d, 0x65, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x69, 0x6e,
	0x69, 0x74, 0x64, 0x62, 0x2e, 0x4d, 0x65, 0x74, 0x61, 0x52, 0x04, 0x6d, 0x65, 0x74, 0x61, 0x32,
	0xdf, 0x03, 0x0a, 0x0b, 0x49, 0x6e, 0x69, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12,
	0x36, 0x0a, 0x06, 0x49, 0x6e, 0x69, 0x74, 0x44, 0x42, 0x12, 0x13, 0x2e, 0x69, 0x6e, 0x69, 0x74,
	0x64, 0x62, 0x2e, 0x49, 0x6e, 0x69, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x15,
	0x2e, 0x69, 0x6e, 0x69, 0x74, 0x64, 0x62, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x44, 0x0a, 0x0c, 0x49, 0x6e, 0x73, 0x65, 0x72,
	0x74, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x12, 0x1b, 0x2e, 0x69, 0x6e, 0x69, 0x74, 0x64, 0x62,
	0x2e, 0x49, 0x6e, 0x73, 0x65, 0x72, 0x74, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x15, 0x2e, 0x69, 0x6e, 0x69, 0x74, 0x64, 0x62, 0x2e, 0x45, 0x6d,
	0x70, 0x74, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x40, 0x0a,
	0x0a, 0x49, 0x6e, 0x73, 0x65, 0x72, 0x74, 0x42, 0x6c, 0x6f, 0x67, 0x12, 0x19, 0x2e, 0x69, 0x6e,
	0x69, 0x74, 0x64, 0x62, 0x2e, 0x49, 0x6e, 0x73, 0x65, 0x72, 0x74, 0x42, 0x6c, 0x6f, 0x67, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x15, 0x2e, 0x69, 0x6e, 0x69, 0x74, 0x64, 0x62, 0x2e,
	0x45, 0x6d, 0x70, 0x74, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12,
	0x46, 0x0a, 0x0d, 0x49, 0x6e, 0x73, 0x65, 0x72, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74,
	0x12, 0x1c, 0x2e, 0x69, 0x6e, 0x69, 0x74, 0x64, 0x62, 0x2e, 0x49, 0x6e, 0x73, 0x65, 0x72, 0x74,
	0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x15,
	0x2e, 0x69, 0x6e, 0x69, 0x74, 0x64, 0x62, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x40, 0x0a, 0x0a, 0x49, 0x6e, 0x73, 0x65, 0x72,
	0x74, 0x50, 0x6f, 0x73, 0x74, 0x12, 0x19, 0x2e, 0x69, 0x6e, 0x69, 0x74, 0x64, 0x62, 0x2e, 0x49,
	0x6e, 0x73, 0x65, 0x72, 0x74, 0x50, 0x6f, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x15, 0x2e, 0x69, 0x6e, 0x69, 0x74, 0x64, 0x62, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x46, 0x0a, 0x0d, 0x49, 0x6e, 0x73,
	0x65, 0x72, 0x74, 0x50, 0x6f, 0x73, 0x74, 0x54, 0x61, 0x67, 0x12, 0x1c, 0x2e, 0x69, 0x6e, 0x69,
	0x74, 0x64, 0x62, 0x2e, 0x49, 0x6e, 0x73, 0x65, 0x72, 0x74, 0x50, 0x6f, 0x73, 0x74, 0x54, 0x61,
	0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x15, 0x2e, 0x69, 0x6e, 0x69, 0x74, 0x64,
	0x62, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x00, 0x12, 0x3e, 0x0a, 0x09, 0x49, 0x6e, 0x73, 0x65, 0x72, 0x74, 0x54, 0x61, 0x67, 0x12, 0x18,
	0x2e, 0x69, 0x6e, 0x69, 0x74, 0x64, 0x62, 0x2e, 0x49, 0x6e, 0x73, 0x65, 0x72, 0x74, 0x54, 0x61,
	0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x15, 0x2e, 0x69, 0x6e, 0x69, 0x74, 0x64,
	0x62, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x00, 0x42, 0x31, 0x5a, 0x2f, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f,
	0x6a, 0x61, 0x63, 0x6b, 0x73, 0x6b, 0x6a, 0x2f, 0x63, 0x61, 0x72, 0x74, 0x61, 0x2f, 0x74, 0x65,
	0x73, 0x74, 0x64, 0x61, 0x74, 0x61, 0x2f, 0x69, 0x6e, 0x69, 0x74, 0x64, 0x62, 0x3b, 0x69, 0x6e,
	0x69, 0x74, 0x64, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_testdata_initdb_initdb_proto_rawDescOnce sync.Once
	file_testdata_initdb_initdb_proto_rawDescData = file_testdata_initdb_initdb_proto_rawDesc
)

func file_testdata_initdb_initdb_proto_rawDescGZIP() []byte {
	file_testdata_initdb_initdb_proto_rawDescOnce.Do(func() {
		file_testdata_initdb_initdb_proto_rawDescData = protoimpl.X.CompressGZIP(file_testdata_initdb_initdb_proto_rawDescData)
	})
	return file_testdata_initdb_initdb_proto_rawDescData
}

var file_testdata_initdb_initdb_proto_msgTypes = make([]protoimpl.MessageInfo, 9)
var file_testdata_initdb_initdb_proto_goTypes = []interface{}{
	(*Meta)(nil),                 // 0: initdb.Meta
	(*InsertAuthorRequest)(nil),  // 1: initdb.InsertAuthorRequest
	(*InsertBlogRequest)(nil),    // 2: initdb.InsertBlogRequest
	(*InsertCommentRequest)(nil), // 3: initdb.InsertCommentRequest
	(*InsertPostRequest)(nil),    // 4: initdb.InsertPostRequest
	(*InsertPostTagRequest)(nil), // 5: initdb.InsertPostTagRequest
	(*InsertTagRequest)(nil),     // 6: initdb.InsertTagRequest
	(*EmptyResponse)(nil),        // 7: initdb.EmptyResponse
	(*InitRequest)(nil),          // 8: initdb.InitRequest
	(*timestamp.Timestamp)(nil),  // 9: google.protobuf.Timestamp
}
var file_testdata_initdb_initdb_proto_depIdxs = []int32{
	0,  // 0: initdb.InsertAuthorRequest.meta:type_name -> initdb.Meta
	0,  // 1: initdb.InsertBlogRequest.meta:type_name -> initdb.Meta
	0,  // 2: initdb.InsertCommentRequest.meta:type_name -> initdb.Meta
	0,  // 3: initdb.InsertPostRequest.meta:type_name -> initdb.Meta
	9,  // 4: initdb.InsertPostRequest.created_on:type_name -> google.protobuf.Timestamp
	0,  // 5: initdb.InsertPostTagRequest.meta:type_name -> initdb.Meta
	0,  // 6: initdb.InsertTagRequest.meta:type_name -> initdb.Meta
	0,  // 7: initdb.InitRequest.meta:type_name -> initdb.Meta
	8,  // 8: initdb.InitService.InitDB:input_type -> initdb.InitRequest
	1,  // 9: initdb.InitService.InsertAuthor:input_type -> initdb.InsertAuthorRequest
	2,  // 10: initdb.InitService.InsertBlog:input_type -> initdb.InsertBlogRequest
	3,  // 11: initdb.InitService.InsertComment:input_type -> initdb.InsertCommentRequest
	4,  // 12: initdb.InitService.InsertPost:input_type -> initdb.InsertPostRequest
	5,  // 13: initdb.InitService.InsertPostTag:input_type -> initdb.InsertPostTagRequest
	6,  // 14: initdb.InitService.InsertTag:input_type -> initdb.InsertTagRequest
	7,  // 15: initdb.InitService.InitDB:output_type -> initdb.EmptyResponse
	7,  // 16: initdb.InitService.InsertAuthor:output_type -> initdb.EmptyResponse
	7,  // 17: initdb.InitService.InsertBlog:output_type -> initdb.EmptyResponse
	7,  // 18: initdb.InitService.InsertComment:output_type -> initdb.EmptyResponse
	7,  // 19: initdb.InitService.InsertPost:output_type -> initdb.EmptyResponse
	7,  // 20: initdb.InitService.InsertPostTag:output_type -> initdb.EmptyResponse
	7,  // 21: initdb.InitService.InsertTag:output_type -> initdb.EmptyResponse
	15, // [15:22] is the sub-list for method output_type
	8,  // [8:15] is the sub-list for method input_type
	8,  // [8:8] is the sub-list for extension type_name
	8,  // [8:8] is the sub-list for extension extendee
	0,  // [0:8] is the sub-list for field type_name
}

func init() { file_testdata_initdb_initdb_proto_init() }
func file_testdata_initdb_initdb_proto_init() {
	if File_testdata_initdb_initdb_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_testdata_initdb_initdb_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Meta); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_testdata_initdb_initdb_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InsertAuthorRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_testdata_initdb_initdb_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InsertBlogRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_testdata_initdb_initdb_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InsertCommentRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_testdata_initdb_initdb_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InsertPostRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_testdata_initdb_initdb_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InsertPostTagRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_testdata_initdb_initdb_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InsertTagRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_testdata_initdb_initdb_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EmptyResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_testdata_initdb_initdb_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InitRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_testdata_initdb_initdb_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   9,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_testdata_initdb_initdb_proto_goTypes,
		DependencyIndexes: file_testdata_initdb_initdb_proto_depIdxs,
		MessageInfos:      file_testdata_initdb_initdb_proto_msgTypes,
	}.Build()
	File_testdata_initdb_initdb_proto = out.File
	file_testdata_initdb_initdb_proto_rawDesc = nil
	file_testdata_initdb_initdb_proto_goTypes = nil
	file_testdata_initdb_initdb_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// InitServiceClient is the client API for InitService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type InitServiceClient interface {
	InitDB(ctx context.Context, in *InitRequest, opts ...grpc.CallOption) (*EmptyResponse, error)
	InsertAuthor(ctx context.Context, in *InsertAuthorRequest, opts ...grpc.CallOption) (*EmptyResponse, error)
	InsertBlog(ctx context.Context, in *InsertBlogRequest, opts ...grpc.CallOption) (*EmptyResponse, error)
	InsertComment(ctx context.Context, in *InsertCommentRequest, opts ...grpc.CallOption) (*EmptyResponse, error)
	InsertPost(ctx context.Context, in *InsertPostRequest, opts ...grpc.CallOption) (*EmptyResponse, error)
	InsertPostTag(ctx context.Context, in *InsertPostTagRequest, opts ...grpc.CallOption) (*EmptyResponse, error)
	InsertTag(ctx context.Context, in *InsertTagRequest, opts ...grpc.CallOption) (*EmptyResponse, error)
}

type initServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewInitServiceClient(cc grpc.ClientConnInterface) InitServiceClient {
	return &initServiceClient{cc}
}

func (c *initServiceClient) InitDB(ctx context.Context, in *InitRequest, opts ...grpc.CallOption) (*EmptyResponse, error) {
	out := new(EmptyResponse)
	err := c.cc.Invoke(ctx, "/initdb.InitService/InitDB", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *initServiceClient) InsertAuthor(ctx context.Context, in *InsertAuthorRequest, opts ...grpc.CallOption) (*EmptyResponse, error) {
	out := new(EmptyResponse)
	err := c.cc.Invoke(ctx, "/initdb.InitService/InsertAuthor", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *initServiceClient) InsertBlog(ctx context.Context, in *InsertBlogRequest, opts ...grpc.CallOption) (*EmptyResponse, error) {
	out := new(EmptyResponse)
	err := c.cc.Invoke(ctx, "/initdb.InitService/InsertBlog", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *initServiceClient) InsertComment(ctx context.Context, in *InsertCommentRequest, opts ...grpc.CallOption) (*EmptyResponse, error) {
	out := new(EmptyResponse)
	err := c.cc.Invoke(ctx, "/initdb.InitService/InsertComment", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *initServiceClient) InsertPost(ctx context.Context, in *InsertPostRequest, opts ...grpc.CallOption) (*EmptyResponse, error) {
	out := new(EmptyResponse)
	err := c.cc.Invoke(ctx, "/initdb.InitService/InsertPost", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *initServiceClient) InsertPostTag(ctx context.Context, in *InsertPostTagRequest, opts ...grpc.CallOption) (*EmptyResponse, error) {
	out := new(EmptyResponse)
	err := c.cc.Invoke(ctx, "/initdb.InitService/InsertPostTag", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *initServiceClient) InsertTag(ctx context.Context, in *InsertTagRequest, opts ...grpc.CallOption) (*EmptyResponse, error) {
	out := new(EmptyResponse)
	err := c.cc.Invoke(ctx, "/initdb.InitService/InsertTag", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// InitServiceServer is the server API for InitService service.
type InitServiceServer interface {
	InitDB(context.Context, *InitRequest) (*EmptyResponse, error)
	InsertAuthor(context.Context, *InsertAuthorRequest) (*EmptyResponse, error)
	InsertBlog(context.Context, *InsertBlogRequest) (*EmptyResponse, error)
	InsertComment(context.Context, *InsertCommentRequest) (*EmptyResponse, error)
	InsertPost(context.Context, *InsertPostRequest) (*EmptyResponse, error)
	InsertPostTag(context.Context, *InsertPostTagRequest) (*EmptyResponse, error)
	InsertTag(context.Context, *InsertTagRequest) (*EmptyResponse, error)
}

// UnimplementedInitServiceServer can be embedded to have forward compatible implementations.
type UnimplementedInitServiceServer struct {
}

func (*UnimplementedInitServiceServer) InitDB(context.Context, *InitRequest) (*EmptyResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method InitDB not implemented")
}
func (*UnimplementedInitServiceServer) InsertAuthor(context.Context, *InsertAuthorRequest) (*EmptyResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method InsertAuthor not implemented")
}
func (*UnimplementedInitServiceServer) InsertBlog(context.Context, *InsertBlogRequest) (*EmptyResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method InsertBlog not implemented")
}
func (*UnimplementedInitServiceServer) InsertComment(context.Context, *InsertCommentRequest) (*EmptyResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method InsertComment not implemented")
}
func (*UnimplementedInitServiceServer) InsertPost(context.Context, *InsertPostRequest) (*EmptyResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method InsertPost not implemented")
}
func (*UnimplementedInitServiceServer) InsertPostTag(context.Context, *InsertPostTagRequest) (*EmptyResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method InsertPostTag not implemented")
}
func (*UnimplementedInitServiceServer) InsertTag(context.Context, *InsertTagRequest) (*EmptyResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method InsertTag not implemented")
}

func RegisterInitServiceServer(s *grpc.Server, srv InitServiceServer) {
	s.RegisterService(&_InitService_serviceDesc, srv)
}

func _InitService_InitDB_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(InitRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(InitServiceServer).InitDB(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/initdb.InitService/InitDB",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(InitServiceServer).InitDB(ctx, req.(*InitRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _InitService_InsertAuthor_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(InsertAuthorRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(InitServiceServer).InsertAuthor(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/initdb.InitService/InsertAuthor",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(InitServiceServer).InsertAuthor(ctx, req.(*InsertAuthorRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _InitService_InsertBlog_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(InsertBlogRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(InitServiceServer).InsertBlog(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/initdb.InitService/InsertBlog",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(InitServiceServer).InsertBlog(ctx, req.(*InsertBlogRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _InitService_InsertComment_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(InsertCommentRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(InitServiceServer).InsertComment(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/initdb.InitService/InsertComment",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(InitServiceServer).InsertComment(ctx, req.(*InsertCommentRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _InitService_InsertPost_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(InsertPostRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(InitServiceServer).InsertPost(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/initdb.InitService/InsertPost",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(InitServiceServer).InsertPost(ctx, req.(*InsertPostRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _InitService_InsertPostTag_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(InsertPostTagRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(InitServiceServer).InsertPostTag(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/initdb.InitService/InsertPostTag",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(InitServiceServer).InsertPostTag(ctx, req.(*InsertPostTagRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _InitService_InsertTag_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(InsertTagRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(InitServiceServer).InsertTag(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/initdb.InitService/InsertTag",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(InitServiceServer).InsertTag(ctx, req.(*InsertTagRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _InitService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "initdb.InitService",
	HandlerType: (*InitServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "InitDB",
			Handler:    _InitService_InitDB_Handler,
		},
		{
			MethodName: "InsertAuthor",
			Handler:    _InitService_InsertAuthor_Handler,
		},
		{
			MethodName: "InsertBlog",
			Handler:    _InitService_InsertBlog_Handler,
		},
		{
			MethodName: "InsertComment",
			Handler:    _InitService_InsertComment_Handler,
		},
		{
			MethodName: "InsertPost",
			Handler:    _InitService_InsertPost_Handler,
		},
		{
			MethodName: "InsertPostTag",
			Handler:    _InitService_InsertPostTag_Handler,
		},
		{
			MethodName: "InsertTag",
			Handler:    _InitService_InsertTag_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "testdata/initdb/initdb.proto",
}
